import { MigrationInterface, QueryRunner } from "typeorm";

export class UsersAutoGeneratedTable1753575203651
  implements MigrationInterface
{
  public async up(queryRunner: QueryRunner): Promise<void> {
    const checkTypeQuery = `
    SELECT EXISTS (
      SELECT 1 FROM pg_type WHERE typname = 'permission_type'
    )
  `;

    const result = await queryRunner.query(checkTypeQuery);
    const typeAlreadyExists = result[0].exists;

    if (!typeAlreadyExists) {
      await queryRunner.query(`
      CREATE TYPE "public"."permission_type" AS ENUM ('0', '1')
    `);
    }

    const tableExists = await queryRunner.hasTable("users");

    if (!tableExists) {
      await queryRunner.query(`
      CREATE TABLE "users" (
        "id" SERIAL PRIMARY KEY,
        "username" varchar(50) NOT NULL,
        "password" varchar(100) NOT NULL,
        "email" varchar(100) NULL,
        "permission_type" "public"."permission_type" DEFAULT '0' NOT NULL
      ) `);

      await queryRunner.query(`
      CREATE INDEX "idx_users_username" ON "users" ("username")
    `);
    }
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`DROP TABLE "users"`);
    await queryRunner.query(`DROP TYPE "public"."permission_type"`);
  }
}
